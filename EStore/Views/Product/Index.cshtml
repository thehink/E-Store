@model EStore.Models.ProductViewModels.ProductsViewModel

@{
    ViewData["Title"] = "Products";
}

<div class="row mt-2">
    <div class="col">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Products</a></li>
            @if (Model.CategoryId > 0 && Model.Categories.Any(c => c.Id == Model.CategoryId))
            {
                var catName = Model.Categories.FirstOrDefault(c => c.Id == Model.CategoryId).Name;
                <li class="breadcrumb-item">
                    @if (string.IsNullOrEmpty(Model.Query))
                    {
                        @catName
                    }
                    else
                    {
                        @Html.ActionLink(catName, "Index", "Product", new { category = Model.CategoryId }, null)
                    }
                </li>
            }
            @if (!string.IsNullOrEmpty(Model.Query))
            {
                <li class="breadcrumb-item active">@Model.Query</li>
            }
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-sm-5 col-md-4 col-xs-12 mb-4">

        @await Html.PartialAsync("_CartPartial")

        <div class="card">
            <div class="card-header">
                Categories
            </div>
            <div class="list-group">
                @Html.ActionLink("All", "Index", "Product", new { category = 0, q = Model.Query }, new { @class = $"list-group-item{(Model.CategoryId == 0 ? " active" : "")}" })
                @foreach (var category in Model.Categories)
                {
                    @Html.ActionLink(category.Name, "Index", "Product", new { category = category.Id, q = Model.Query }, new { @class = $"list-group-item{(Model.CategoryId == category.Id ? " active" : "")}" });
                }
            </div>
        </div>
    </div>
    <div class="col">
        <form asp-controller="Product" asp-action="Index" asp-route-returnurl="@ViewData["ReturnUrl"]" method="get" class="mb-4">
            <input type="hidden" name="category" value="@Model.CategoryId">
            <div class="form-group row mb-0">
                <div class="col">
                    <input type="text" name="q" class="form-control" id="search_text" placeholder="Search" value="@Model.Query">
                </div>
                <div class="col-auto mr-3">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-search" aria-hidden="true"></i></button>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Model.Query))
            {
                <small>Search results for "<b>@Model.Query</b>"</small>
            }
            <small>Displaying items <b>@(Model.Page * Model.Limit) - @(Model.Page * Model.Limit + Model.Products.Count)</b> out of <b>@Model.Results</b> results</small>
        </form>
        <div class="products row">
            @foreach (var product in Model.Products)
            {
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="card mb-2">

                        <div class="card-block">
                            <div class="media">
                                @if (!string.IsNullOrEmpty(product.Image))
                                {
                                    <img class="d-flex mr-3" style="max-width:100px" src="@product.Image" alt="Generic placeholder image">
                                }

                                <div class="media-body">
                                    <h4 class="card-title"><a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">@product.Name  (@product.Price kr)</a></h4>
                                    <p class="card-text">@product.Description</p>
                                    <a href="@Url.Action("AddToCart", "Cart", new { id = product.Id })" class="btn btn-primary">Add To Cart</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.Page > 0 && Model.Pages > 1)
                {
                    <li class="page-item">
                        <a class="page-link" aria-label="Previous" asp-route-category="@(Model.CategoryId)" asp-route-query="@(Model.Query)" asp-route-page="@(Model.Page - 1)">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }
                
                @for (var i = 0; i < Model.Pages; ++i)
                {
                    <li class="page-item @Model.GetActivePageClass(i)"><a class="page-link" asp-route-category="@(Model.CategoryId)" asp-route-query="@(Model.Query)" asp-route-page="@i">@(i + 1)</a></li>
                }
                @if (Model.Page < Model.Pages - 1)
                {
                    <li class="page-item">
                        <a class="page-link" aria-label="Next" asp-route-category="@(Model.CategoryId)" asp-route-query="@(Model.Query)" asp-route-page="@(Model.Page + 1)">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
    <div class="col-auto">
        
    </div>
</div>